// <auto-generated />
using System;
using Factura_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Factura_Backend.Migrations
{
    [DbContext(typeof(DatosDBContext))]
    [Migration("20250914225823_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Factura_Backend.Models.Entidades.ClientesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula_ruc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.DetallesFacturaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturasModelId")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("double");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.Property<int>("ProductosModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacturasModelId");

                    b.HasIndex("ProductosModelId");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.FacturasModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientesModelId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo_Venta")
                        .HasColumnType("longtext");

                    b.Property<double?>("Descuento")
                        .HasColumnType("double");

                    b.Property<string>("Estado_Venta")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Metodo_Pago")
                        .HasColumnType("longtext");

                    b.Property<string>("Notas")
                        .HasColumnType("longtext");

                    b.Property<double>("Sub_Total_Venta")
                        .HasColumnType("double");

                    b.Property<double>("Total_Venta")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ClientesModelId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.ProductosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo_Barras")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Precio")
                        .HasColumnType("double");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.DetallesFacturaModel", b =>
                {
                    b.HasOne("Factura_Backend.Models.Entidades.FacturasModel", "FacturasModel")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("FacturasModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Factura_Backend.Models.Entidades.ProductosModel", "ProductosModel")
                        .WithMany()
                        .HasForeignKey("ProductosModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturasModel");

                    b.Navigation("ProductosModel");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.FacturasModel", b =>
                {
                    b.HasOne("Factura_Backend.Models.Entidades.ClientesModel", "ClientesModel")
                        .WithMany()
                        .HasForeignKey("ClientesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientesModel");
                });

            modelBuilder.Entity("Factura_Backend.Models.Entidades.FacturasModel", b =>
                {
                    b.Navigation("DetalleFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
